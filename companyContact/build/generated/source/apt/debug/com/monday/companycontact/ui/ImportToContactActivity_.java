//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.0.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.monday.companycontact.ui;

import java.io.Serializable;
import java.util.List;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.os.Build.VERSION;
import android.os.Build.VERSION_CODES;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.ListView;
import com.monday.companycontact.R;
import com.monday.companycontact.db.Provider;
import com.monday.companycontact.db.ProviderList;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.UiThreadExecutor;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.builder.PostActivityStarter;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class ImportToContactActivity_
    extends ImportToContactActivity
    implements HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String PROVIDER_LIST_EXTRA = "providerList";

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(R.layout.activity_import);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectExtras_();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static ImportToContactActivity_.IntentBuilder_ intent(Context context) {
        return new ImportToContactActivity_.IntentBuilder_(context);
    }

    public static ImportToContactActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new ImportToContactActivity_.IntentBuilder_(fragment);
    }

    public static ImportToContactActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new ImportToContactActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.listView = ((ListView) hasViews.findViewById(R.id.import_listview));
        this.pickAllBt = ((Button) hasViews.findViewById(R.id.import_pick_all));
        View view_import_import = hasViews.findViewById(R.id.import_import);

        if (view_import_import!= null) {
            view_import_import.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ImportToContactActivity_.this.onImport();
                }
            }
            );
        }
        if (this.pickAllBt!= null) {
            this.pickAllBt.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ImportToContactActivity_.this.onPickAll();
                }
            }
            );
        }
        if (this.listView!= null) {
            this.listView.setOnItemClickListener(new OnItemClickListener() {

                @Override
                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                    ImportToContactActivity_.this.onItemClick(position);
                }
            }
            );
        }
        init();
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int itemId_ = item.getItemId();
        if (itemId_ == android.R.id.home) {
            onHome();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(PROVIDER_LIST_EXTRA)) {
                this.providerList = ((ProviderList) extras_.getSerializable(PROVIDER_LIST_EXTRA));
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    @Override
    void onInsertFinished(final ProgressDialog dialog) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                ImportToContactActivity_.super.onInsertFinished(dialog);
            }
        }
        , 0L);
    }

    @Override
    void _insertProviders(final List<Provider> list, final ProgressDialog dialog) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0L, "") {

            @Override
            public void execute() {
                try {
                    ImportToContactActivity_.super._insertProviders(list, dialog);
                } catch (final Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }
        }
        );
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<ImportToContactActivity_.IntentBuilder_>
    {
        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, ImportToContactActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), ImportToContactActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), ImportToContactActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public PostActivityStarter startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                        fragment_.startActivityForResult(intent, requestCode, lastOptions);
                    } else {
                        fragment_.startActivityForResult(intent, requestCode);
                    }
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                            context.startActivity(intent, lastOptions);
                        } else {
                            context.startActivity(intent);
                        }
                    }
                }
            }
            return new PostActivityStarter(context);
        }

        /**
         * 
         * @param providerList
         *     the value for this extra
         * @return
         *     the IntentBuilder to chain calls
         */
        public ImportToContactActivity_.IntentBuilder_ providerList(ProviderList providerList) {
            return super.extra(PROVIDER_LIST_EXTRA, ((Serializable) providerList));
        }
    }
}
